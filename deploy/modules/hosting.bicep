param uniqueNameFormat string
param location string
param databaseName string
param logAnalyticsName string
param acsName string
param acsSystemTopicName string
param aiSpeechName string
param deploymentArtifactUrl string
param tags object

resource logAnalytics 'Microsoft.OperationalInsights/workspaces@2023-09-01' existing = {
  name: logAnalyticsName
}
resource acs 'Microsoft.Communication/communicationServices@2023-06-01-preview' existing = {
  name: acsName
}
resource acsSystemTopic 'Microsoft.EventGrid/systemTopics@2024-06-01-preview' existing = {
  name: acsSystemTopicName
}
resource aiSpeech 'Microsoft.CognitiveServices/accounts@2024-10-01' existing = {
  name: aiSpeechName
}

resource appInsights 'Microsoft.Insights/components@2020-02-02-preview' = {
  name: format(uniqueNameFormat, 'appins')
  location: location
  kind: 'web'
  properties: {
    Application_Type: 'web'
    WorkspaceResourceId: logAnalytics.id
  }
}

resource sqlServer 'Microsoft.Sql/servers@2024-05-01-preview' = {
  name: format(uniqueNameFormat, 'sql')
  location: location
  tags: tags
  properties: {
    administrators: {
      azureADOnlyAuthentication: true
      tenantId: subscription().tenantId
      login: uniqueString(appService.id)
      sid: appService.identity.principalId
      principalType: 'Application'
    }
  }

  resource sqlDB 'databases@2024-05-01-preview' = {
    name: databaseName
    tags: tags
    location: location
    sku: {
      name: 'Standard'
      tier: 'Standard'
    }
  }
}

resource sqlDBLogs 'Microsoft.Insights/diagnosticSettings@2021-05-01-preview' = {
  name: 'allLogsToLogAnalytics'
  scope: sqlServer::sqlDB
  properties: {
    workspaceId: logAnalytics.id
    logs: [
      {
        categoryGroup: 'allLogs'
        enabled: true
      }
    ]
  }
}


resource appServicePlan 'Microsoft.Web/serverfarms@2024-04-01' = {
  name: format(uniqueNameFormat, 'asp')
  location: location
  tags: tags
  sku: {
    tier: 'PremiumV3'
    name: 'P1V3'
    capacity: 1
  }
}

resource appService 'Microsoft.Web/sites@2024-04-01' = {
  name: format(uniqueNameFormat, 'backend')
  location: location
  tags: tags
  identity: {
    type: 'SystemAssigned'
  }
  properties: {
    serverFarmId: appServicePlan.id
    httpsOnly: true
    clientAffinityEnabled: true
    publicNetworkAccess: 'Enabled'
    autoGeneratedDomainNameLabelScope: 'NoReuse'
    siteConfig: {
      alwaysOn: true
      webSocketsEnabled: true
      ftpsState: 'Disabled'
      appSettings: [
        {
          name: 'ConnectionStrings__SQLDB'
          // Disabled for the moment until I debug what is happening with user assigned identity in connection string
          //value: 'Server=tcp:${sqlServer.properties.fullyQualifiedDomainName};Authentication=Active Directory Default; Database=${sqlServer::sqlDB.name};'
          value: ''
        }
        {
          name: 'ACS__Endpoint'
          value: 'https://${acs.properties.hostName}/'
        }
        {
          name: 'ACS__InboundNumber'
          value: '*'
        }
        {
          name: 'AzureTenantId'
          value: subscription().tenantId
        }
        {
          name: 'AzureAISpeech__Region'
          value: aiSpeech.location
        }
        {
          name: 'AzureAISpeech__ResourceID'
          value: aiSpeech.id
        }
        {
          name: 'Translator'
          value: 'AzureAISpeech'
        }
        {
          name: 'EventGrid__TopicResourceID'
          value: acsSystemTopic.id
        }
        {
          name: 'APPLICATIONINSIGHTS_CONNECTION_STRING'
          value: appInsights.properties.ConnectionString
        }
      ]
    }
  }
  resource disableScmBasicCredentials 'basicPublishingCredentialsPolicies@2024-04-01' = {
    name: 'scm'
    properties: { allow: false }
  }
  resource disableFtpBasicCredentials 'basicPublishingCredentialsPolicies@2024-04-01' = {
    name: 'ftp'
    properties: { allow: false }
  }
  resource zipDeploy 'extensions@2024-04-01' = if (!empty(trim(deploymentArtifactUrl))) {
    name: 'MSDeploy'
    properties: {
      packageUri: deploymentArtifactUrl
    }
  }
}

resource appServiceLogs 'Microsoft.Insights/diagnosticSettings@2021-05-01-preview' = {
  name: 'allLogsToLogAnalytics'
  scope: appService
  properties: {
    workspaceId: logAnalytics.id
    logs: [
      { category: 'AppServiceAntivirusScanAuditLogs', enabled: true }
      { category: 'AppServiceHTTPLogs', enabled: true }
      { category: 'AppServiceConsoleLogs', enabled: true }
      { category: 'AppServiceAppLogs', enabled: true }
      { category: 'AppServiceFileAuditLogs', enabled: true }
      { category: 'AppServiceAuditLogs', enabled: true }
      { category: 'AppServiceIPSecAuditLogs', enabled: true }
      { category: 'AppServicePlatformLogs', enabled: true }
      { category: 'AppServiceAuthenticationLogs', enabled: true }
    ]
  }
}

output principalId string = appService.identity.principalId
